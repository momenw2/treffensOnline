<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/item.css" />
    <title>Document</title>
    <style>
      .quantity-control {
        display: flex;
        align-items: center;
      }
      .quantity-control button {
        width: 30px;
        height: 30px;
        font-size: 20px;
      }
      .quantity-control input {
        width: 50px;
        text-align: center;
        font-size: 16px;
        margin: 0 5px;
      }
      .slideClass {
        display: none;
      }
      .slideClass.fade {
        animation: fadeEffect 1s;
      }
      @keyframes fadeEffect {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
      .dot {
        cursor: pointer;
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        transition: background-color 0.3s ease;
      }
      .active,
      .dot:hover {
        background-color: #717171;
      }
    </style>
  </head>
  <body>
    <%- include('partials/header.ejs') -%>

    <div class="itemContainer">
      <div class="itemImg">
        <div style="width: 500px">
          <!-- Container for the HTML slideshow -->
          <div class="imageshow-container" id="imageshow-container">
            <!-- Individual image slides will be inserted here -->
          </div>
          <br />
          <!-- The dots/circles for navigation -->
          <div style="text-align: center" id="dots-container">
            <!-- Dots will be inserted here -->
          </div>
        </div>
      </div>
      <div class="itemData">
        <h2 id="item-name">Item Name</h2>
        <p id="item-description">Item Description</p>
        <div class="itemSizes" id="item-sizes">
          <h3>Select Size:</h3>
          <!-- Sizes will be inserted here -->
        </div>
        <div class="itemPrice">
          <h3>Price : <span id="item-price">0 EGP</span></h3>
        </div>
        <div class="addToCartBox">
          <button id="addToCartBtn" onclick="addToCart()">Add To Cart</button>
        </div>
      </div>
    </div>

    <%- include('partials/footer.ejs') -%>

    <script>
      let firstImagePath = "";

      // Function to fetch and display item data
      async function fetchItemData() {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get("category");
        const name = urlParams.get("name");

        try {
          const response = await fetch(
            `/productBCK/item?category=${category}&name=${name}`
          );
          const data = await response.json();

          if (response.ok) {
            displayItemData(data);
          } else {
            console.error("Error fetching item:", data.message);
          }
        } catch (error) {
          console.error("Error fetching item:", error);
        }
      }

      // Function to display item data in the page
      function displayItemData(data) {
        document.getElementById("item-name").textContent = data.name;
        document.getElementById("item-description").textContent =
          data.description;
        document.getElementById("item-price").textContent = `${data.price} EGP`;

        const imagesContainer = document.getElementById("imageshow-container");
        const dotsContainer = document.getElementById("dots-container");

        data.images.forEach((image, index) => {
          const slideElement = document.createElement("div");
          slideElement.className = "slideClass fade";

          if (index === 0) {
            firstImagePath = image; // Store the first image path
          }

          if (index < 2) {
            // Display first 2 images as images
            slideElement.innerHTML = `<img src="${image}" style="width: 100%" />`;
          } else if (index === 2) {
            // Display the third item as a video
            slideElement.innerHTML = `
            <video style="width: 100%" autoplay loop muted>
              <source src="${image}" type="video/mp4">
              Your browser does not support the video tag.
            </video>
          `;
          }

          imagesContainer.appendChild(slideElement);

          const dot = document.createElement("span");
          dot.className = "dot";
          dot.onclick = () => currentSlide(index + 1); // Adjusted to index + 1
          dotsContainer.appendChild(dot);
        });

        const sizesContainer = document.getElementById("item-sizes");
        data.sizes.forEach((size) => {
          const input = document.createElement("input");
          input.type = "radio";
          input.id = `size${size}`;
          input.name = "size";
          input.value = size;
          input.onchange = checkCart;
          const label = document.createElement("label");
          label.htmlFor = `size${size}`;
          label.textContent = size;
          sizesContainer.appendChild(input);
          sizesContainer.appendChild(label);
        });

        currentSlide(1); // Display the first slide initially
      }

      // Function to switch between slides (images or video)
      function currentSlide(n) {
        var i;
        var slides = document.getElementsByClassName("slideClass");
        var dots = document.getElementsByClassName("dot");

        if (n > slides.length) {
          n = 1;
        }
        if (n < 1) {
          n = slides.length;
        }

        for (i = 0; i < slides.length; i++) {
          slides[i].style.display = "none";
        }

        for (i = 0; i < dots.length; i++) {
          dots[i].className = dots[i].className.replace(" active", "");
        }

        slides[n - 1].style.display = "block";
        dots[n - 1].className += " active";
      }

      // Function to handle Add To Cart button click
      function addToCart() {
        var selectedSize = document.querySelector('input[name="size"]:checked');
        if (!selectedSize) {
          alert("Please select a size.");
          return;
        }

        var itemName = document.getElementById("item-name").textContent;
        var itemPrice = document.getElementById("item-price").textContent;
        var itemSize = selectedSize.value;

        var cartItem = {
          name: itemName,
          price: itemPrice,
          size: itemSize,
          quantity: 1,
          image: firstImagePath, // Add the first image path to the cart item
        };

        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];
        var existingItemIndex = existingCart.findIndex(
          (item) => item.name === itemName && item.size === itemSize
        );

        if (existingItemIndex !== -1) {
          existingCart[existingItemIndex].quantity += 1;
        } else {
          existingCart.push(cartItem);
        }

        localStorage.setItem("cart", JSON.stringify(existingCart));

        console.log("Cart after add:", existingCart);

        updateCartButton();
      }

      // Function to update the Add To Cart button state based on cart
      function updateCartButton() {
        var selectedSize = document.querySelector('input[name="size"]:checked');
        if (!selectedSize) {
          return;
        }

        var itemName = document.getElementById("item-name").textContent;
        var itemSize = selectedSize.value;

        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];
        var existingItem = existingCart.find(
          (item) => item.name === itemName && item.size === itemSize
        );

        var addToCartBox = document.querySelector(".addToCartBox");

        if (existingItem) {
          addToCartBox.innerHTML = `
          <div class="quantity-control">
            <button onclick="decreaseQuantity()">-</button>
            <input type="number" id="itemQuantity" name="quantity" min="1" value="${existingItem.quantity}" readonly>
            <button onclick="increaseQuantity()">+</button>
          </div>
        `;
        } else {
          addToCartBox.innerHTML = `
          <button id="addToCartBtn" onclick="addToCart()">Add To Cart</button>
        `;
        }
      }

      // Function to check cart when size is changed
      function checkCart() {
        updateCartButton();
      }

      // Function to increase quantity
      function increaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        quantityInput.value = parseInt(quantityInput.value) + 1;
        updateCart(quantityInput.value);
      }

      // Function to decrease quantity
      function decreaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        if (quantityInput.value > 1) {
          quantityInput.value = parseInt(quantityInput.value) - 1;
          updateCart(quantityInput.value);
        }
      }

      // Function to update cart in local storage
      function updateCart(quantity) {
        var selectedSize = document.querySelector(
          'input[name="size"]:checked'
        ).value;
        var itemName = document.getElementById("item-name").textContent;
        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];

        var itemIndex = existingCart.findIndex(
          (item) => item.name === itemName && item.size === selectedSize
        );

        if (itemIndex !== -1) {
          existingCart[itemIndex].quantity = quantity;
          localStorage.setItem("cart", JSON.stringify(existingCart));
          console.log("Cart after update:", existingCart);
        }
      }

      fetchItemData();
    </script>
  </body>
</html>
