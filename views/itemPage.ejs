<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" type="x-icon" href="/logo4.png" />
    <link rel="stylesheet" href="/item.css" />
    <title>Treffens - Item Details</title>
    <style>
      /* ... (keep the existing styles) ... */
      /* Optional: Add styles for the Sold Out button */
      .sold-out-button {
        background-color: gray;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: not-allowed;
        font-size: 16px;
      }
      .quantity-control button {
        padding: 5px 10px;
        margin: 0 5px;
      }
      .quantity-control input {
        width: 50px;
        text-align: center;
      }
    </style>
  </head>
  <body>
    <%- include('partials/header.ejs') -%>

    <div class="itemContainer">
      <div class="itemImg">
        <div style="width: 500px">
          <div class="imageshow-container" id="imageshow-container">
            <!-- Images will be dynamically inserted here -->
          </div>
          <br />
          <div style="text-align: center" id="dots-container">
            <!-- Dots will be dynamically inserted here -->
          </div>
        </div>
      </div>
      <div class="itemData">
        <h2 id="item-name"></h2>
        <p id="item-description"></p>
        <div class="itemSizes" id="item-sizes">
          <h3>Select Size:</h3>
          <!-- Sizes will be dynamically inserted here -->
        </div>
        <div class="itemPrice">
          <h3>Price : <span id="item-price"></span></h3>
        </div>
        <div class="addToCartBox">
          <!-- Add To Cart or Sold Out button will be dynamically inserted here -->
        </div>
      </div>
    </div>

    <%- include('partials/footer.ejs') -%>

    <script>
      const items = {
        "Urban Crest V2.0": {
          name: "Urban Crest V2.0",
          image: "images/items/tshirts/v2/UrbanCrest/ProductImg.PNG",
          price: { old: 700, new: "Sold Out" },
          description:
            "Rise above the ordinary with the Summit Echo Tee from Treffens. This design captures the essence of peaks and the thrill of the climb, blending bold aesthetics with a touch of the wild. Perfect for those who aim high and never settle.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/tshirts/v2/UrbanCrest/Front.PNG",
            "images/items/tshirts/v2/UrbanCrest/Back.PNG",
            "images/items/tshirts/v2/UrbanCrest/3DVideo.MP4",
          ],
        },
        "Graffiti Mile V2.0": {
          name: "Graffiti Mile V2.0",
          image: "images/items/tshirts/v2/GraffitiMile/ProductImg.PNG",
          price: { old: 700, new: "Sold Out" },
          description:
            "Step into the urban scene with the Graffiti Mile Tee from Treffens. Featuring bold graffiti-inspired lettering and the striking ‘5280’ detail, this design is a nod to street culture and the grit of the city. Perfect for those who wear their journey with pride and aren’t afraid to leave a mark.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/tshirts/v2/GraffitiMile/Front.PNG",
            "images/items/tshirts/v2/GraffitiMile/Back.PNG",
            "images/items/tshirts/v2/GraffitiMile/3DVideo.MP4",
          ],
        },
        "Global Bound V2.0": {
          name: "Global Bound V2.0",
          image: "images/items/tshirts/v2/BlackBlueTshirt/ProductImg.PNG",
          price: { old: 700, new: "Sold Out" },
          description:
            "Embrace the edge with the Barbed Globe Tee from Treffens. Featuring a bold barbed wire motif encircling the Treffens name, this design symbolizes resilience and global ambition. Inspired by street culture, it’s perfect for those who break boundaries and make their mark from the streets of Cairo to the world.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/tshirts/v2/GlobalBound/Front.PNG",
            "images/items/tshirts/v2/GlobalBound/Back.PNG",
            "images/items/tshirts/v2/GlobalBound/3DVideo.MP4",
          ],
        },
        "Glow Up V1.0": {
          name: "Glow Up V1.0",
          image: "images/items/tshirts/glowUp/productImg.PNG",
          price: { old: 700, new: "Sold Out" },
          description:
            "Make a statement with this bold black T-shirt featuring a standout back design. The graphic includes a sleek, modern “glow up” text across the upper back, complemented by a large, edgy purple star with a vibrant glow effect at the bottom. Perfect for adding a touch of style and attitude to your casual wardrobe.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/tshirts/glowUp/glowUpFront.PNG",
            "images/items/tshirts/glowUp/glowUpBack.PNG",
            "images/items/tshirts/glowUp/glowUp3D.MP4",
          ],
        },
        "Silent Vision V3.0": {
          name: "Silent Vision V3.0",
          image: "images/items/hoodies/v3/1st/1stBack.PNG",
          price: { old: 1000, new: 750 },
          description:
            "Where the streets stay quiet, but your vision speaks loud. This black hoodie blends minimalism with bold street poetry, featuring Treffens’ signature globe logo on the front and graffiti-inspired text on the back. Made for those who walk unseen but leave a lasting impact.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/hoodies/v3/1st/1stFront.PNG",
            "images/items/hoodies/v3/1st/1stBack.PNG",
            "images/items/hoodies/v3/1st/1st3D.MP4",
          ],
        },
        "Outside Authority V3.0": {
          name: "Outside Authority V3.0",
          image: "images/items/hoodies/v3/2nd/2ndBack.PNG",
          price: { old: 1000, new: 750 },
          description:
            "We out here, and we run it. TRF on the chest, global takeover on the back—move loud, no holds barred.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/hoodies/v3/2nd/2ndFront.PNG",
            "images/items/hoodies/v3/2nd/2ndBack.PNG",
            "images/items/hoodies/v3/2nd/2nd3D.MP4",
          ],
        },
        "Reality Check V3.0": {
          name: "Reality Check V3.0",
          image: "images/items/hoodies/v3/3rd/3rdBack.PNG",
          price: { old: 1000, new: 750 },
          description:
            "Reality moves fast—either you’re in, or you’re out. Treffens globe on the front, bold statement on the back. No filters, no second chances—just raw truth.",
          sizes: ["S", "M", "L", "XL"],
          images: [
            "images/items/hoodies/v3/3rd/3rdFront.PNG",
            "images/items/hoodies/v3/3rd/3rdBack.PNG",
            "images/items/hoodies/v3/3rd/3rd3D.MP4",
          ],
        },
      };

      var firstImagePath = "";
      var currentItem = null; // To keep track of the current item

      function getItemFromURL() {
        const urlParams = new URLSearchParams(window.location.search);
        const itemName = urlParams.get("name");
        return items[itemName];
      }

      function displayItemData() {
        const item = getItemFromURL();
        currentItem = item; // Set the current item
        if (!item) {
          console.error("Item not found");
          return;
        }

        document.getElementById("item-name").textContent = item.name;
        document.getElementById("item-description").textContent =
          item.description;

        const itemPriceElement = document.getElementById("item-price");
        itemPriceElement.textContent =
          item.price.new === "Sold Out" ? "Sold Out" : `${item.price.new} EGP`;

        // Display sizes
        const sizesContainer = document.getElementById("item-sizes");
        sizesContainer.innerHTML = "<h3>Select Size:</h3>";
        item.sizes.forEach((size) => {
          sizesContainer.innerHTML += `
            <input type="radio" id="size${size}" name="size" value="${size}" onchange="checkCart()">
            <label for="size${size}">${size}</label>
          `;
        });

        // Display images
        const imagesContainer = document.getElementById("imageshow-container");
        const dotsContainer = document.getElementById("dots-container");
        imagesContainer.innerHTML = "";
        dotsContainer.innerHTML = "";

        const images = item.images || [item.image];
        images.forEach((src, index) => {
          const isVideo = src.toLowerCase().endsWith(".mp4");
          imagesContainer.innerHTML += `
            <div class="slideClass fade">
              ${
                isVideo
                  ? `<video style="width: 100%" autoplay loop muted>
                    <source src="${src}" type="video/mp4">
                    Your browser does not support the video tag.
                    </video>`
                  : `<img src="${src}" style="width: 100%" alt="${item.name}">`
              }
            </div>
          `;
          dotsContainer.innerHTML += `<span class="dot" onclick="currentSlide(${
            index + 1
          })"></span>`;
        });

        firstImagePath = images[0];
        currentSlide(1);

        // Handle Add To Cart or Sold Out button
        renderAddToCartButton();
      }

      function renderAddToCartButton() {
        if (!currentItem) return;

        const addToCartBox = document.querySelector(".addToCartBox");

        if (currentItem.price.new === "Sold Out") {
          addToCartBox.innerHTML = `
            <button id="soldOutBtn" class="sold-out-button" disabled aria-disabled="true">Sold Out</button>
          `;
        } else {
          addToCartBox.innerHTML = `
            <button id="addToCartBtn" onclick="addToCart()">Add To Cart</button>
          `;
        }
      }

      function currentSlide(n) {
        var i;
        var slides = document.getElementsByClassName("slideClass");
        var dots = document.getElementsByClassName("dot");

        if (n > slides.length) {
          n = 1;
        }
        if (n < 1) {
          n = slides.length;
        }

        for (i = 0; i < slides.length; i++) {
          slides[i].style.display = "none";
        }

        for (i = 0; i < dots.length; i++) {
          dots[i].className = dots[i].className.replace(" active", "");
        }

        slides[n - 1].style.display = "block";
        dots[n - 1].className += " active";

        // Update firstImagePath based on the current slide
        var slideType = slides[n - 1].getElementsByTagName("img")[0]
          ? "img"
          : "video";
        if (slideType === "img") {
          firstImagePath = slides[n - 1].getElementsByTagName("img")[0].src;
        } else {
          firstImagePath = slides[n - 1]
            .getElementsByTagName("video")[0]
            .getElementsByTagName("source")[0].src;
        }
      }

      function addToCart() {
        if (!currentItem || currentItem.price.new === "Sold Out") {
          // Prevent adding to cart if sold out
          return;
        }

        var selectedSize = document.querySelector('input[name="size"]:checked');
        if (!selectedSize) {
          alert("Please select a size.");
          return;
        }

        var itemName = document.getElementById("item-name").textContent;
        var itemPrice = document.getElementById("item-price").textContent;
        var itemSize = selectedSize.value;

        var cartItem = {
          name: itemName,
          price: itemPrice,
          size: itemSize,
          quantity: 1,
          image: firstImagePath,
        };

        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];
        var existingItemIndex = existingCart.findIndex(
          (item) => item.name === itemName && item.size === itemSize
        );

        if (existingItemIndex !== -1) {
          existingCart[existingItemIndex].quantity += 1;
        } else {
          existingCart.push(cartItem);
        }

        localStorage.setItem("cart", JSON.stringify(existingCart));

        console.log("Cart after add:", existingCart);

        updateCartButton();
      }

      function updateCartButton() {
        if (!currentItem) return;

        if (currentItem.price.new === "Sold Out") {
          // If sold out, ensure the Sold Out button is displayed
          renderAddToCartButton();
          return;
        }

        var selectedSize = document.querySelector('input[name="size"]:checked');
        if (!selectedSize) {
          // If no size selected, show Add To Cart button
          renderAddToCartButton();
          return;
        }

        var itemName = document.getElementById("item-name").textContent;
        var itemSize = selectedSize.value;

        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];
        var existingItem = existingCart.find(
          (item) => item.name === itemName && item.size === itemSize
        );

        var addToCartBox = document.querySelector(".addToCartBox");

        if (existingItem) {
          addToCartBox.innerHTML = `
            <div class="quantity-control">
              <button onclick="decreaseQuantity()">-</button>
              <input type="number" id="itemQuantity" name="quantity" min="1" value="${existingItem.quantity}" readonly>
              <button onclick="increaseQuantity()">+</button>
            </div>
          `;
        } else {
          addToCartBox.innerHTML = `
            <button id="addToCartBtn" onclick="addToCart()">Add To Cart</button>
          `;
        }
      }

      function checkCart() {
        updateCartButton();
      }

      function increaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        quantityInput.value = parseInt(quantityInput.value) + 1;
        updateCart(quantityInput.value);
      }

      function decreaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        if (quantityInput.value > 1) {
          quantityInput.value = parseInt(quantityInput.value) - 1;
          updateCart(quantityInput.value);
        }
      }

      function updateCart(quantity) {
        if (!currentItem) return;

        if (currentItem.price.new === "Sold Out") {
          // If sold out, do not update the cart
          renderAddToCartButton();
          return;
        }

        var selectedSize = document.querySelector(
          'input[name="size"]:checked'
        ).value;
        var itemName = document.getElementById("item-name").textContent;
        var existingCart = JSON.parse(localStorage.getItem("cart")) || [];

        var itemIndex = existingCart.findIndex(
          (item) => item.name === itemName && item.size === selectedSize
        );

        if (itemIndex !== -1) {
          existingCart[itemIndex].quantity = quantity;
          localStorage.setItem("cart", JSON.stringify(existingCart));
          console.log("Cart after update:", existingCart);
        }
      }

      // Display the item data when the page loads
      window.onload = displayItemData;
    </script>
  </body>
</html>
